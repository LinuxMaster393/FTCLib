// Top-level build file where you can add configuration options common to all sub-projects/modules.
import org.jetbrains.dokka.gradle.DokkaTask

buildscript {
    ext.kotlin_version = '1.6.10'

    repositories {
        google()
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:4.1.3'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

plugins {
    id 'org.jetbrains.dokka' version '1.9.20'
}

allprojects {
    repositories {
        google()
        jcenter()
        mavenCentral()
    }
}

subprojects {
    apply plugin: 'org.jetbrains.dokka'

    dependencies {
        dokkaPlugin "org.jetbrains.dokka:kotlin-as-java-plugin:1.9.20"
    }

    //noinspection ConfigurationAvoidance
//    afterEvaluate {
//    tasks.withType(DokkaTask.class) {
//        dokkaSourceSets.configureEach {
    afterEvaluate {
        dokkaHtml {  // Extract dependency aar classes for dokka compilation
            dokkaSourceSets.configureEach {
            println("sdafafd  " + configurations.implementation)

            configurations.implementation.setCanBeResolved(true)
            configurations.compileOnly.setCanBeResolved(true)

            configurations.implementation
                    .filter { it.name.endsWith('.aar') }
                    .each { aar ->
                        copy {
                            from zipTree(aar)
                            include "**/classes.jar"
                            into "$buildDir/tmp/aarsToJars/${aar.name.replace('.aar', '')}/"
                        }
                    }

            configurations.compileOnly
                    .filter { it.name.endsWith('.aar') }
                    .each { aar ->
                        copy {
                            from zipTree(aar)
                            include "**/classes.jar"
                            into "$buildDir/tmp/aarsToJars/${aar.name.replace('.aar', '')}/"
                        }
                    }

            println("asfd")
//            sourceRoots.from(android.sourceSets.main.java.srcDirs)
            classpath.from(
                    project.files(),
                    project.files(android.getBootClasspath().join(File.pathSeparator)),
                    configurations.implementation,
                    configurations.compileOnly,
                    fileTree(dir: "$buildDir/tmp/aarsToJars/")
            )
            // failOnError false
            exclude '**/BuildConfig.java'
            exclude '**/R.java'
        }}
    }
}
